[{"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/app/App.tsx":"1","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/footer/index.tsx":"2","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/index.tsx":"3","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/board/index.tsx":"4","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/reducer/users/index.ts":"5","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/action/users/index.ts":"6","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/script/utility.ts":"7","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/form/button/index.tsx":"8","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/reportWebVitals.ts":"9","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/board/UserCard.tsx":"10","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/store.ts":"11","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/header/index.tsx":"12"},{"size":361,"mtime":1624817146985,"results":"13","hashOfConfig":"14"},{"size":1533,"mtime":1624818907248,"results":"15","hashOfConfig":"14"},{"size":747,"mtime":1624817065799,"results":"16","hashOfConfig":"14"},{"size":684,"mtime":1624818411780,"results":"17","hashOfConfig":"14"},{"size":563,"mtime":1624805896396,"results":"18","hashOfConfig":"14"},{"size":555,"mtime":1624805870444,"results":"19","hashOfConfig":"14"},{"size":176,"mtime":1624813291798,"results":"20","hashOfConfig":"14"},{"size":606,"mtime":1624813213752,"results":"21","hashOfConfig":"14"},{"size":425,"mtime":1624780997285,"results":"22","hashOfConfig":"14"},{"size":2473,"mtime":1624822265598,"results":"23","hashOfConfig":"14"},{"size":712,"mtime":1624792877832,"results":"24","hashOfConfig":"14"},{"size":170,"mtime":1624817225311,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ml97c5",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/app/App.tsx",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/footer/index.tsx",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/index.tsx",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/board/index.tsx",["53","54"],"import { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { IUser } from \"../../model/user\";\nimport { IReduxState } from \"../../redux/appState\";\nimport { UserCard } from \"./UserCard\";\nimport style from \"./userCard.module.scss\";\n\ninterface IProps {\n  users: Array<IUser>;\n}\n\nconst BoardComponent = (props: IProps) => {\n  return (\n    <div className={style.board}>\n      {props.users.map((item, index) => {\n        return <UserCard user={item} key={index} />;\n      })}\n    </div>\n  );\n};\nconst mapStateToProps = (state: IReduxState) => {\n  return {\n    users: state.users,\n  };\n};\n\nexport const Board = connect(mapStateToProps, {})(BoardComponent);\n","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/reducer/users/index.ts",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/action/users/index.ts",[],["55","56"],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/script/utility.ts",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/form/button/index.tsx",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/reportWebVitals.ts",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/board/UserCard.tsx",["57","58","59","60","61"],"import userEvent from \"@testing-library/user-event\";\nimport { DetailedHTMLProps, HTMLAttributes, useEffect, useRef } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { IUser } from \"../../model/user\";\nimport { actionArrngeUsers, actionRemoveUsers } from \"../../redux/action/users\";\nimport { IReduxState } from \"../../redux/appState\";\nimport AppButton from \"../form/button\";\nimport style from \"./userCard.module.scss\";\n\ninterface IProps {\n  user: IUser;\n}\n\nconst setWidth = (count: number) => {\n  switch (count) {\n    case 1:\n      return \"99%\";\n    case 2:\n    case 3:\n    case 4:\n      return \"46%\";\n    case 5:\n    case 6:\n      return \"30%\";\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 11:\n    case 12:\n      return \"22%\";\n    default:\n      return \"99%\";\n  }\n};\n\nexport const UserCard = (props: IProps) => {\n  const users: Array<IUser> = useSelector((state: IReduxState) => state.users);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    cardRef.current!.style.width = setWidth(users.length);\n  }, [users]);\n  const handleRemoveUser = () => {\n    const newUsers: Array<IUser> = users.filter(\n      (user) => user.id !== props.user.id\n    );\n\n    dispatch(actionRemoveUsers(newUsers));\n    cardRef.current!.style.width = setWidth(newUsers.length);\n  };\n  const cardRef = useRef<HTMLDivElement | null>(null);\n\n  const handleDrop = (ev: any) => {\n    ev.preventDefault();\n\n    const from = ev.dataTransfer.getData(\"text\");\n    const to = ev.target.id;\n    if (!from || !to) return;\n    const newUsers = [...users];\n    const fromIndex = newUsers.findIndex((user) => user?.id === from);\n    const toIndex = newUsers.findIndex((user) => user?.id === to);\n    newUsers[fromIndex] = users[toIndex];\n    newUsers[toIndex] = users[fromIndex];\n\n    dispatch(actionArrngeUsers(newUsers));\n  };\n  const ondragover = (ev: any) => {\n    ev.preventDefault();\n  };\n  const ondragstart = (ev: any) => {\n    ev.dataTransfer!.setData(\"text\", ev.target!.id);\n  };\n\n  return (\n    <>\n      <div\n        onDrop={handleDrop}\n        onDragOver={ondragover}\n        className={style.userCard}\n        ref={cardRef}\n        id={props.user?.id}\n        draggable\n        onDragStart={ondragstart}\n        // onDrag={handleDrag}\n      >\n        <AppButton className={style.removeBtn} onClick={handleRemoveUser}>\n          <img src=\"/trash.svg\" />\n        </AppButton>\n\n        <div>{props.user?.title}</div>\n      </div>\n    </>\n  );\n};\n","/home/chiman/Desktop/project/chalenge/drag-drop-card/src/redux/store.ts",[],"/home/chiman/Desktop/project/chalenge/drag-drop-card/src/component/header/index.tsx",[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":2,"column":19,"nodeType":"64","messageId":"65","endLine":2,"endColumn":30},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":17},{"ruleId":"62","severity":1,"message":"72","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":27},{"ruleId":"62","severity":1,"message":"73","line":2,"column":29,"nodeType":"64","messageId":"65","endLine":2,"endColumn":43},{"ruleId":"62","severity":1,"message":"74","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":87,"column":11,"nodeType":"77","endLine":87,"endColumn":35},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'userEvent' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'HTMLAttributes' is defined but never used.","'connect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]